var VOXEL=VOXEL||Object.create(null);VOXEL.Emitter=function(){var t=function(e){return function(n,i){var r=arguments;return i.split(/ +/g).forEach(function(n){r[1]=n,e.apply(t,r)},this),this}},e=t(function(t,e,n,i){if(!t[e])throw Error('Invalid event "'+e+'"');return t[e].push([n,i||this,!1]),this}),n=t(function(t,e,n,i){if(!t[e])throw Error('Invalid event "'+e+'"');t[e]=t[e].filter(function(t){return t[0]!==n||t[1]!==i})}),i=t(function(t,e,n,i){if(!t[e])throw Error('Invalid event "'+e+'"');t[e].push([n,i||this,!0])}),r=t(function(t,e){if(!t[e])throw Error('Invalid event "'+e+'"');var n=Array.prototype.slice.call(arguments,2);t[e]=t[e].filter(function(t){return t[0].apply(t[1],n),t[2]===!1})});return function(t){var s=Object.create(null);return t.on=e.bind(t,s),t.off=n.bind(t,s),t.once=i.bind(t,s),t.trigger=r.bind(t,s),{addEventType:function(t){return s[t]=[],this}}}}();var VOXEL=VOXEL||Object.create(null);VOXEL.Engine=function(){var t=function(t){return[Math.floor(t[0]/16),Math.floor(t[1]/16),Math.floor(t[2]/16)]},e=function(t,e){return[t[0]-e[0],t[1]-e[1],t[2]-e[2]]},n=function(){VOXEL.Emitter(this).addEventType("regionFetched").addEventType("regionMissing").addEventType("regionUpdated").addEventType("regionPolygonized"),this.regions=Object.create(null),this.scheduler=new VOXEL.Scheduler(4),this.scheduler.on("taskQueued",function(t){var e=t.task.regionKey,n=this.regions[e];n.scheduled=!0},this),this.scheduler.on("taskSent",function(t){var e=(t.task.regionKey,t.task.region);e.dirty=!1,e.buffer=!1,e.dataless=!0},this),this.scheduler.on("taskCompleted",function(t){var e=t.task.regionKey,n=t.task.region;n.scheduled=!1,n.buffer=t.data.buffer,n.dataless=!1,n.synchronize(),this.update(e),this.trigger("regionPolygonized",new VOXEL.Engine.RegionPolygonizedEvent(e,n,t.data.polygons))},this),this.on("regionFetched regionUpdated",function(t){var e=t.regionKey,n=t.region;n.dirty=!0,this.update(e)},this)};return n.prototype.fetch=function(t,e){var n=function(n){this.regions[t]=n,n&&this.trigger("regionFetched",new VOXEL.Engine.RegionFetchedEvent(t,n)),e(n)}.bind(this);if(this.regions[t]===void 0){var i=new VOXEL.Engine.RegionMissingEvent(t);this.trigger("regionMissing",i,n),i.isDefaultPrevented()||e(null)}else e(this.regions[t]);return this},n.prototype.update=function(t){var e=this.regions[t];e.dirty&&!e.scheduled&&(e.scheduled=!0,e.dirty=!1,this.scheduler.queue({regionKey:t,region:e,data:{buffer:e.buffer},transfers:[e.buffer]}))},n.prototype.get=function(n,i){var r=t(n),s=e(n,r);return this.fetch(r,function(t){null===t?i(null):t.get(s,i)}.bind(this)),this},n.prototype.set=function(n,i,r){var s=function(t,e,n,r){n=n||function(){},(this.regions[t]||r)&&this.fetch(t,function(r){null===r?n(!1):r.set(e,i,function(){n(!0),this.trigger("regionUpdated",new VOXEL.Engine.RegionUpdatedEvent(t,r,e,i))}.bind(this))}.bind(this))}.bind(this),o=function(t,e,n){t&&0!==u[0]||e&&0!==u[1]||n&&0!==u[2]||s([a[0]-t,a[1]-e,a[2]-n],[t?16:u[0],e?16:u[1],n?16:u[2]],null,!1)},a=t(n),u=e(n,a);return o(1,0,0),o(0,1,0),o(0,0,1),o(1,1,0),o(0,1,1),o(1,0,1),o(1,1,1),s(a,u,r,!0),this},n.RegionMissingEvent=function(t){var e=!1;this.preventDefault=function(){e=!0},this.isDefaultPrevented=function(){return e},this.regionKey=t},n.RegionFetchedEvent=function(t,e){this.regionKey=t,this.region=e},n.RegionUpdatedEvent=function(t,e,n,i){this.regionKey=t,this.region=e,this.regionPoint=n,this.value=i},n.RegionPolygonizedEvent=function(t,e,n){this.regionKey=t,this.region=e,this.polygons=n},n}();var VOXEL=VOXEL||Object.create(null);VOXEL.L0=0,VOXEL.L1=1<<24,VOXEL.L2=2<<24,VOXEL.L3=3<<24,VOXEL.L4=4<<24,VOXEL.L5=5<<24,VOXEL.L6=6<<24,VOXEL.L7=7<<24,VOXEL.L8=8<<24,VOXEL.L9=9<<24;var VOXEL=VOXEL||Object.create(null);VOXEL.Region=function(){var t=function(t){return 17*17*t[2]+17*t[1]+t[0]},e=function(){for(var t=new ArrayBuffer(19652),e=new Uint32Array(t),n=0,i=e.length;i>n;++n)e[n]=4294967295;return t},n=function(){this.pendingRead=[],this.pendingWrite={},this.dataless=!1,this.buffer=e(),this.synchronize()};return n.prototype.synchronize=function(){var t=this.data=new Uint32Array(this.buffer),e=this.pendingWrite;this.pendingWrite={},Object.keys(e).forEach(function(n){t[n]=e[n]});var n=this.pendingRead;return this.pendingRead={},Object.keys(n).forEach(function(e){n[e].forEach(function(n){n(t[e])})}),this},n.prototype.get=function(e,n){var i=t(e);this.dataless?this.pendingWrite[i]?n(this.pendingWrite[i]):(this.pendingRead[i]||(this.pendingRead[i]=[]),this.pendingRead[i].push(n)):n(this.data[i])},n.prototype.set=function(e,n,i){var r=t(e);this.dataless?this.pendingWrite[r]=n:this.data[r]=n,i()},n}();var VOXEL=VOXEL||Object.create(null);VOXEL.Scheduler=function(){var t=function(){var t=null;return function(){return null===t&&(t=(window.URL||window.webkitURL).createObjectURL(new Blob([VOXEL.Scheduler.workerScript]))),t}}(),e=function(e){VOXEL.Emitter(this).addEventType("taskQueued").addEventType("taskSent").addEventType("taskCompleted"),this.tasks=[],this.workers=Object.create(null),this.availableWorkers=[];for(var n=0;e>n;++n)this.workers[n]={instance:new Worker(t()),task:null},this.workers[n].instance.onmessage=this.listener.bind(this,n,null),this.workers[n].instance.onerror=this.listener.bind(this,n),this.availableWorkers.push(n)};return e.prototype.listener=function(t,e,n){if(e)throw Error("Worker error : "+e.message);this["_"+n.data.command](t,n.data.data)},e.prototype.queue=function(t){this.tasks.push(t),this.trigger("taskQueued",new VOXEL.Scheduler.TaskQueuedEvent(t)),this.dequeue()},e.prototype.dequeue=function(){if(this.tasks.length&&this.availableWorkers.length){var t=this.tasks.shift(),e=this.availableWorkers.shift(),n=this.workers[e];n.task=t,n.instance.postMessage(t.data,t.transfers),this.trigger("taskSent",new VOXEL.Scheduler.TaskSentEvent(t))}},e.prototype._complete=function(t,e){var n=this.workers[t].task;this.workers[t].task=null,this.availableWorkers.push(t),this.trigger("taskCompleted",new VOXEL.Scheduler.TaskCompletedEvent(n,e)),this.dequeue()},e.prototype._log=function(t,e){console.log.apply(console,["Worker #"+t].concat(e))},e.TaskQueuedEvent=function(t){this.task=t},e.TaskSentEvent=function(t){this.task=t},e.TaskCompletedEvent=function(t,e){this.task=t,this.data=e},e}();VOXEL.Scheduler.workerScript="var Tables={vertexOffsets:[[0,0,0],[1,0,0],[1,1,0],[0,1,0],[0,0,1],[1,0,1],[1,1,1],[0,1,1]],edgeConnections:[[0,1],[1,2],[2,3],[3,0],[4,5],[5,6],[6,7],[7,4],[0,4],[1,5],[2,6],[3,7]],edgeDirections:[[1,0,0],[0,1,0],[-1,0,0],[0,-1,0],[1,0,0],[0,1,0],[-1,0,0],[0,-1,0],[0,0,1],[0,0,1],[0,0,1],[0,0,1]],edgeFlagMap:[0,265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,1370,598,863,85,348,3676,3925,3167,3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,419,681,928,3376,3129,3891,3642,2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0],triangleConnections:[[],[0,8,3],[0,1,9],[1,8,3,9,8,1],[1,2,10],[0,8,3,1,2,10],[9,2,10,0,2,9],[2,8,3,2,10,8,10,9,8],[3,11,2],[0,11,2,8,11,0],[1,9,0,2,3,11],[1,11,2,1,9,11,9,8,11],[3,10,1,11,10,3],[0,10,1,0,8,10,8,11,10],[3,9,0,3,11,9,11,10,9],[9,8,10,10,8,11],[4,7,8],[4,3,0,7,3,4],[0,1,9,8,4,7],[4,1,9,4,7,1,7,3,1],[1,2,10,8,4,7],[3,4,7,3,0,4,1,2,10],[9,2,10,9,0,2,8,4,7],[2,10,9,2,9,7,2,7,3,7,9,4],[8,4,7,3,11,2],[11,4,7,11,2,4,2,0,4],[9,0,1,8,4,7,2,3,11],[4,7,11,9,4,11,9,11,2,9,2,1],[3,10,1,3,11,10,7,8,4],[1,11,10,1,4,11,1,0,4,7,11,4],[4,7,8,9,0,11,9,11,10,11,0,3],[4,7,11,4,11,9,9,11,10],[9,5,4],[9,5,4,0,8,3],[0,5,4,1,5,0],[8,5,4,8,3,5,3,1,5],[1,2,10,9,5,4],[3,0,8,1,2,10,4,9,5],[5,2,10,5,4,2,4,0,2],[2,10,5,3,2,5,3,5,4,3,4,8],[9,5,4,2,3,11],[0,11,2,0,8,11,4,9,5],[0,5,4,0,1,5,2,3,11],[2,1,5,2,5,8,2,8,11,4,8,5],[10,3,11,10,1,3,9,5,4],[4,9,5,0,8,1,8,10,1,8,11,10],[5,4,0,5,0,11,5,11,10,11,0,3],[5,4,8,5,8,10,10,8,11],[9,7,8,5,7,9],[9,3,0,9,5,3,5,7,3],[0,7,8,0,1,7,1,5,7],[1,5,3,3,5,7],[9,7,8,9,5,7,10,1,2],[10,1,2,9,5,0,5,3,0,5,7,3],[8,0,2,8,2,5,8,5,7,10,5,2],[2,10,5,2,5,3,3,5,7],[7,9,5,7,8,9,3,11,2],[9,5,7,9,7,2,9,2,0,2,7,11],[2,3,11,0,1,8,1,7,8,1,5,7],[11,2,1,11,1,7,7,1,5],[9,5,8,8,5,7,10,1,3,10,3,11],[5,7,0,5,0,9,7,11,0,1,0,10,11,10,0],[11,10,0,11,0,3,10,5,0,8,0,7,5,7,0],[11,10,5,7,11,5],[10,6,5],[0,8,3,5,10,6],[9,0,1,5,10,6],[1,8,3,1,9,8,5,10,6],[1,6,5,2,6,1],[1,6,5,1,2,6,3,0,8],[9,6,5,9,0,6,0,2,6],[5,9,8,5,8,2,5,2,6,3,2,8],[2,3,11,10,6,5],[11,0,8,11,2,0,10,6,5],[0,1,9,2,3,11,5,10,6],[5,10,6,1,9,2,9,11,2,9,8,11],[6,3,11,6,5,3,5,1,3],[0,8,11,0,11,5,0,5,1,5,11,6],[3,11,6,0,3,6,0,6,5,0,5,9],[6,5,9,6,9,11,11,9,8],[5,10,6,4,7,8],[4,3,0,4,7,3,6,5,10],[1,9,0,5,10,6,8,4,7],[10,6,5,1,9,7,1,7,3,7,9,4],[6,1,2,6,5,1,4,7,8],[1,2,5,5,2,6,3,0,4,3,4,7],[8,4,7,9,0,5,0,6,5,0,2,6],[7,3,9,7,9,4,3,2,9,5,9,6,2,6,9],[3,11,2,7,8,4,10,6,5],[5,10,6,4,7,2,4,2,0,2,7,11],[0,1,9,4,7,8,2,3,11,5,10,6],[9,2,1,9,11,2,9,4,11,7,11,4,5,10,6],[8,4,7,3,11,5,3,5,1,5,11,6],[5,1,11,5,11,6,1,0,11,7,11,4,0,4,11],[0,5,9,0,6,5,0,3,6,11,6,3,8,4,7],[6,5,9,6,9,11,4,7,9,7,11,9],[10,4,9,6,4,10],[4,10,6,4,9,10,0,8,3],[10,0,1,10,6,0,6,4,0],[8,3,1,8,1,6,8,6,4,6,1,10],[1,4,9,1,2,4,2,6,4],[3,0,8,1,2,9,2,4,9,2,6,4],[0,2,4,4,2,6],[8,3,2,8,2,4,4,2,6],[10,4,9,10,6,4,11,2,3],[0,8,2,2,8,11,4,9,10,4,10,6],[3,11,2,0,1,6,0,6,4,6,1,10],[6,4,1,6,1,10,4,8,1,2,1,11,8,11,1],[9,6,4,9,3,6,9,1,3,11,6,3],[8,11,1,8,1,0,11,6,1,9,1,4,6,4,1],[3,11,6,3,6,0,0,6,4],[6,4,8,11,6,8],[7,10,6,7,8,10,8,9,10],[0,7,3,0,10,7,0,9,10,6,7,10],[10,6,7,1,10,7,1,7,8,1,8,0],[10,6,7,10,7,1,1,7,3],[1,2,6,1,6,8,1,8,9,8,6,7],[2,6,9,2,9,1,6,7,9,0,9,3,7,3,9],[7,8,0,7,0,6,6,0,2],[7,3,2,6,7,2],[2,3,11,10,6,8,10,8,9,8,6,7],[2,0,7,2,7,11,0,9,7,6,7,10,9,10,7],[1,8,0,1,7,8,1,10,7,6,7,10,2,3,11],[11,2,1,11,1,7,10,6,1,6,7,1],[8,9,6,8,6,7,9,1,6,11,6,3,1,3,6],[0,9,1,11,6,7],[7,8,0,7,0,6,3,11,0,11,6,0],[7,11,6],[7,6,11],[3,0,8,11,7,6],[0,1,9,11,7,6],[8,1,9,8,3,1,11,7,6],[10,1,2,6,11,7],[1,2,10,3,0,8,6,11,7],[2,9,0,2,10,9,6,11,7],[6,11,7,2,10,3,10,8,3,10,9,8],[7,2,3,6,2,7],[7,0,8,7,6,0,6,2,0],[2,7,6,2,3,7,0,1,9],[1,6,2,1,8,6,1,9,8,8,7,6],[10,7,6,10,1,7,1,3,7],[10,7,6,1,7,10,1,8,7,1,0,8],[0,3,7,0,7,10,0,10,9,6,10,7],[7,6,10,7,10,8,8,10,9],[6,8,4,11,8,6],[3,6,11,3,0,6,0,4,6],[8,6,11,8,4,6,9,0,1],[9,4,6,9,6,3,9,3,1,11,3,6],[6,8,4,6,11,8,2,10,1],[1,2,10,3,0,11,0,6,11,0,4,6],[4,11,8,4,6,11,0,2,9,2,10,9],[10,9,3,10,3,2,9,4,3,11,3,6,4,6,3],[8,2,3,8,4,2,4,6,2],[0,4,2,4,6,2],[1,9,0,2,3,4,2,4,6,4,3,8],[1,9,4,1,4,2,2,4,6],[8,1,3,8,6,1,8,4,6,6,10,1],[10,1,0,10,0,6,6,0,4],[4,6,3,4,3,8,6,10,3,0,3,9,10,9,3],[10,9,4,6,10,4],[4,9,5,7,6,11],[0,8,3,4,9,5,11,7,6],[5,0,1,5,4,0,7,6,11],[11,7,6,8,3,4,3,5,4,3,1,5],[9,5,4,10,1,2,7,6,11],[6,11,7,1,2,10,0,8,3,4,9,5],[7,6,11,5,4,10,4,2,10,4,0,2],[3,4,8,3,5,4,3,2,5,10,5,2,11,7,6],[7,2,3,7,6,2,5,4,9],[9,5,4,0,8,6,0,6,2,6,8,7],[3,6,2,3,7,6,1,5,0,5,4,0],[6,2,8,6,8,7,2,1,8,4,8,5,1,5,8],[9,5,4,10,1,6,1,7,6,1,3,7],[1,6,10,1,7,6,1,0,7,8,7,0,9,5,4],[4,0,10,4,10,5,0,3,10,6,10,7,3,7,10],[7,6,10,7,10,8,5,4,10,4,8,10],[6,9,5,6,11,9,11,8,9],[3,6,11,0,6,3,0,5,6,0,9,5],[0,11,8,0,5,11,0,1,5,5,6,11],[6,11,3,6,3,5,5,3,1],[1,2,10,9,5,11,9,11,8,11,5,6],[0,11,3,0,6,11,0,9,6,5,6,9,1,2,10],[11,8,5,11,5,6,8,0,5,10,5,2,0,2,5],[6,11,3,6,3,5,2,10,3,10,5,3],[5,8,9,5,2,8,5,6,2,3,8,2],[9,5,6,9,6,0,0,6,2],[1,5,8,1,8,0,5,6,8,3,8,2,6,2,8],[1,5,6,2,1,6],[1,3,6,1,6,10,3,8,6,5,6,9,8,9,6],[10,1,0,10,0,6,9,5,0,5,6,0],[0,3,8,5,6,10],[10,5,6],[11,5,10,7,5,11],[11,5,10,11,7,5,8,3,0],[5,11,7,5,10,11,1,9,0],[10,7,5,10,11,7,9,8,1,8,3,1],[11,1,2,11,7,1,7,5,1],[0,8,3,1,2,7,1,7,5,7,2,11],[9,7,5,9,2,7,9,0,2,2,11,7],[7,5,2,7,2,11,5,9,2,3,2,8,9,8,2],[2,5,10,2,3,5,3,7,5],[8,2,0,8,5,2,8,7,5,10,2,5],[9,0,1,5,10,3,5,3,7,3,10,2],[9,8,2,9,2,1,8,7,2,10,2,5,7,5,2],[1,3,5,3,7,5],[0,8,7,0,7,1,1,7,5],[9,0,3,9,3,5,5,3,7],[9,8,7,5,9,7],[5,8,4,5,10,8,10,11,8],[5,0,4,5,11,0,5,10,11,11,3,0],[0,1,9,8,4,10,8,10,11,10,4,5],[10,11,4,10,4,5,11,3,4,9,4,1,3,1,4],[2,5,1,2,8,5,2,11,8,4,5,8],[0,4,11,0,11,3,4,5,11,2,11,1,5,1,11],[0,2,5,0,5,9,2,11,5,4,5,8,11,8,5],[9,4,5,2,11,3],[2,5,10,3,5,2,3,4,5,3,8,4],[5,10,2,5,2,4,4,2,0],[3,10,2,3,5,10,3,8,5,4,5,8,0,1,9],[5,10,2,5,2,4,1,9,2,9,4,2],[8,4,5,8,5,3,3,5,1],[0,4,5,1,0,5],[8,4,5,8,5,3,9,0,5,0,3,5],[9,4,5],[4,11,7,4,9,11,9,10,11],[0,8,3,4,9,7,9,11,7,9,10,11],[1,10,11,1,11,4,1,4,0,7,4,11],[3,1,4,3,4,8,1,10,4,7,4,11,10,11,4],[4,11,7,9,11,4,9,2,11,9,1,2],[9,7,4,9,11,7,9,1,11,2,11,1,0,8,3],[11,7,4,11,4,2,2,4,0],[11,7,4,11,4,2,8,3,4,3,2,4],[2,9,10,2,7,9,2,3,7,7,4,9],[9,10,7,9,7,4,10,2,7,8,7,0,2,0,7],[3,7,10,3,10,2,7,4,10,1,10,0,4,0,10],[1,10,2,8,7,4],[4,9,1,4,1,7,7,1,3],[4,9,1,4,1,7,0,8,1,8,7,1],[4,0,3,7,4,3],[4,8,7],[9,10,8,10,11,8],[3,0,9,3,9,11,11,9,10],[0,1,10,0,10,8,8,10,11],[3,1,10,11,3,10],[1,2,11,1,11,9,9,11,8],[3,0,9,3,9,11,1,2,9,2,11,9],[0,2,11,8,0,11],[3,2,11],[2,3,8,2,8,10,10,8,9],[9,10,2,0,9,2],[2,3,8,2,8,10,0,1,8,1,10,8],[1,10,2],[1,3,8,9,1,8],[0,9,1],[0,3,8],[]]};self.onmessage=function(e){for(var t=e.data.buffer,n=[],i=new Uint32Array(t),r=Tables.vertexOffsets,s=Tables.edgeConnections,o=Tables.edgeDirections,a=Tables.edgeFlagMap,u=Tables.triangleConnections,h=function(e,t,n){return 0+17*17*n+17*t+e},d=function(e,t,n){var i=t[n];if(4294967295!==t[n]){var r=i>>24;void 0===e[r]&&(e.keys.push(r),e[r]=[4294967295,4294967295,4294967295,4294967295,4294967295,4294967295,4294967295,4294967295]),e[r][n]=i}},c=0;16>c;++c)for(var f=0;16>f;++f)for(var l=0;16>l;++l){var g=[i[h(c+0,f+0,l+0)],i[h(c+1,f+0,l+0)],i[h(c+1,f+1,l+0)],i[h(c+0,f+1,l+0)],i[h(c+0,f+0,l+1)],i[h(c+1,f+0,l+1)],i[h(c+1,f+1,l+1)],i[h(c+0,f+1,l+1)]],p=[];p.keys=[],d(p,g,0),d(p,g,1),d(p,g,2),d(p,g,3),d(p,g,4),d(p,g,5),d(p,g,6),d(p,g,7);for(var v=0,E=p.keys.length;E>v;++v){var y=p[p.keys[v]],k=0|(4294967295!==y[0]?1:0)|(4294967295!==y[1]?2:0)|(4294967295!==y[2]?4:0)|(4294967295!==y[3]?8:0)|(4294967295!==y[4]?16:0)|(4294967295!==y[5]?32:0)|(4294967295!==y[6]?64:0)|(4294967295!==y[7]?128:0),L=a[k];if(self.postMessage({command:\"log\",data:y}),0!==L){for(var O={},b=0;12>b;++b)if(L&1<<b){var V=s[b],X=o[b],w=r[V[0]];O[b]=[c+w[0]+X[0]/2,f+w[1]+X[1]/2,l+w[2]+X[2]/2,y[V[+(4294967295===y[V[0]])]]]}for(var m=u[k],T=0,R=m.length/3;R>T;++T){var M=O[m[3*T+0]],W=O[m[3*T+1]],S=O[m[3*T+2]],j=[W[0]-M[0],W[1]-M[1],W[2]-M[2]],U=[S[0]-M[0],S[1]-M[1],S[2]-M[2]],K=[j[1]*U[2]-j[2]*U[1],j[2]*U[0]-j[0]*U[2],j[0]*U[1]-j[1]*U[0]],C=Math.sqrt(Math.pow(K[0],2)+Math.pow(K[1],2)+Math.pow(K[2],2)),z=[-K[0]/C,-K[1]/C,-K[2]/C];n.push([[M,W,S],z])}}}}self.postMessage({command:\"complete\",data:{buffer:t,polygons:n}},[t])};";